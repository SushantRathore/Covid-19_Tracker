{"version":3,"sources":["InfoBox.js","Map.js","Table.js","util.js","LineGraph.js","App.js","index.js"],"names":["InfoBox","title","cases","total","Card","className","CardContent","Typography","color","Map","center","zoom","TileLayer","url","attribution","Table","countries","map","country","sortData","data","sort","a","b","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","console","log","fetchData","length","datasets","backgroundColor","borderColor","App","setcountries","setcountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","name","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","long","FormControl","Select","variants","onChange","MenuItem","todayCases","todayRecovered","deaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dc7ec80.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card ,CardContent , Typography} from '@material-ui/core'\r\n\r\nfunction InfoBox({title,cases,total}) {\r\n    return (\r\n        <Card className=\"infoBox\">\r\n            <CardContent>\r\n        <Typography className=\"infoBox_title\" color =\"textSecondary\">\r\n            {title}\r\n        </Typography>\r\n\r\n        <h2 className=\"infobox_cases\">{cases}</h2>\r\n        <Typography className=\"infoBox_total\" color =\"textSecondary\">\r\n            {total} Total\r\n        </Typography>\r\n\r\n            </CardContent>\r\n            \r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\nimport \"./Map.css\"\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\n\r\nfunction Map({center , zoom}) {\r\n    return (\r\n        <div className=\"map\">\r\n          <LeafletMap center={center} zoom={zoom}>\r\n          <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n     {/* {showDataOnMap(countries, casesType)} */}\r\n      </LeafletMap>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React from 'react'\r\nimport './Table.css'\r\n\r\nfunction Table({countries}) {\r\n    return   <div className=\"table\">\r\n            {countries.map(({country, cases}) => (\r\n            <tr >\r\n                <td>{country}</td>\r\n                <td>\r\n                    <strong>{cases}</strong>\r\n                </td>\r\n            </tr>\r\n\r\n\r\n            ))}\r\n        </div>;\r\n}\r\n\r\nexport default Table;\r\n","export const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n \r\n    return    sortedData.sort((a,b) => (a.cases>b.cases)? -1:1)\r\n \r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType = 'cases' }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;","import React, { useState, useEffect } from 'react';\nimport { FormControl,Select, MenuItem, CardContent ,Card} from '@material-ui/core';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from'./Table'\nimport './App.css';\nimport { sortData } from './util';\nimport LineGraph  from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n\n  const [countries , setcountries] = useState([]);\n  const [country,setcountry]= useState('worldwide');\n  const [countryInfo , setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] =  useState({lat : 34.80746 , lng : -40.4790});\n  const [mapZoom , setMapZoom] = useState(3);\n\n\n  useEffect (() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response=>response.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  } , []);\n  useEffect(() => {\n// send a request and wait for it\nconst getCountriesData = async()=> {\n  await fetch(\"https://disease.sh/v3/covid-19/countries\")\n  .then((response)=>response.json())\n  .then((data)=> {\n    const countries = data.map((country) => (\n      {\n        name : country.country,\n        value : country.countryInfo.iso2\n      }\n    ));\n\n    const sortedData = sortData(data);\n    setTableData(sortedData);\n    setcountries(countries);\n  });\n};\ngetCountriesData();\n  } , []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setcountry(countryCode);\n\n    const url = \n      countryCode ==='worldwide' \n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        setcountry(countryCode);\n        setCountryInfo(data);\n\n        setMapCenter([data.countryInfo.lat , data.countryInfo.long]);\n        setMapZoom (4);\n    })\n  } ;\n  return (\n    <div className=\"app\">\n      <div className =\"app_left\">\n      <div className=\"app_header\">\n      <h1>Covid-19 Tracker app</h1>\n     <FormControl className=\"app_dropdown\">\n       <Select\n       variants=\"outlined\"\n       onChange ={onCountryChange}\n       value={country}\n       >\n          <MenuItem value=\"worldwide\">WorldWide</MenuItem>\n          {\n            countries.map((country => (\n              <MenuItem value={country.value}>{country.name}</MenuItem>)\n            ))\n          }\n         {/* <MenuItem value=\"worldwide\">WorldWide</MenuItem>\n         <MenuItem value=\"worldwide\">opt 1</MenuItem>\n\n         <MenuItem value=\"worldwide\">opt 2</MenuItem>\n\n         <MenuItem value=\"worldwide\">33ide</MenuItem> */}\n\n       </Select>\n     </FormControl>\n     </div>\n     <div className=\"app_stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total ={2000}/>\n\n          <InfoBox title=\"Recovered\" cases = {countryInfo.todayRecovered} total ={3000}/>\n\n          <InfoBox title=\"Deaths\" cases= {countryInfo.deaths} total ={4000}/>\n     </div>\n     \n\n    <Map\n    center = {mapCenter}\n    zoom= {mapZoom} \n    />\n       \n    </div>\n    <Card className=\"app_right\">\n          <CardContent>\n            <h3>Live cases by country </h3>\n            <Table countries = {tableData} />\n            <h3> WorldWide new cases</h3>\n            <LineGraph />\n          </CardContent>\n    </Card>\n      </div>\n      \n  );\n}\n\nexport default App;\n","  \r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}